// Generated by Selenium IDE
const { Builder, By, Key, until } = require("selenium-webdriver");
const assert = require("assert");
const { login } = require("./autotest.chrome.js");
const createRepo = require("./createrepo.chrome.js");

describe("create-repo", function () {
  this.timeout(30000);
  let driver;
  let vars;
  beforeEach(async function () {
    driver = await new Builder().forBrowser("chrome").build();
    await login(driver, "nclongdev@gmail.com", "CongLong123");
    vars = {};
  });
  afterEach(async function () {
    // await driver.quit();
  });
  it("create-repo", async function () {
    await setTimeout(async () => {
      const createRepoBtn = await createRepo(driver);
      if (!createRepoBtn) {
        await driver.findElement(By.linkText("Create repository")).click();
      } else {
        await createRepoBtn.click();
      }
      await driver.findElement(By.id("repository_name")).click();
      const name = "test-repo-" + Date.now();
      await driver.findElement(By.id("repository_name")).sendKeys(name);
      await driver.findElement(By.id("repository_description")).click();
      await driver
        .findElement(By.id("repository_description"))
        .sendKeys("test-repo");
      await driver.findElement(By.id("repository_visibility_private")).click();
      await driver.findElement(By.id("repository_auto_init")).click();
      await driver.findElement(By.linkText("Create repository")).click();
      await driver.findElement(By.css(".avatar-small")).click();
      await driver.findElement(By.linkText("Your repositories")).click();
    }, [3000]);
  });
});
