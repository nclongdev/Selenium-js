// Generated by Selenium IDE
const { Builder, By, Key, until, TimeUnit } = require("selenium-webdriver");
const assert = require("assert");
const { locateWith } = require("selenium-webdriver");
const { hasUncaughtExceptionCaptureCallback } = require("process");
const { expect } = require("chai");
const { login } = require("./autotest.chrome.js");

describe("Login github", function () {
  this.timeout(30000);
  let driver;
  beforeEach(async function () {
    driver = await new Builder().forBrowser("chrome").build();
  });
  afterEach(async function () {
    await driver.quit();
  });

  it("Login github successfully", async function () {
    await login(driver, "nclongdev@gmail.com", "CongLong123");
    const flashMessageLocator = locateWith(By.id("js-flash-container")).below(
      By.css("path")
    );
    const flashMessage = await driver.findElement(flashMessageLocator);
    const content = await flashMessage.getText();
    console.log(content);
    expect(content).to.equal("");
    // await flaskButtonError.click();
  });

  it("Login github failed", async function () {
    await login(driver, "nclongdev@gmail.com", "CongLong1234");
    const flashMessageLocator = locateWith(By.id("js-flash-container")).below(
      By.css("path")
    );
    const flashMessage = await driver.findElement(flashMessageLocator);
    const content = await flashMessage.getText();
    console.log(content);
    expect(content).to.equal("Incorrect username or password.");
    // await flaskButtonError.click();
  });
});
